{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAW,CACfC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAgBjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUJ,MAAAK,IAEpBM,EAAO,CAAEE,SAAAT,EAAUJ,MAAAK,G,GAEpBA,E,IAIFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUb,EAAKe,EAALf,MACjBN,EAAAsB,OAAOC,QAAQ,sBAAqCC,OAAfL,EAAS,QAAYK,OAANlB,EAAM,MAAK,CAC7DA,MAAO,IACPmB,kBAAmB,Y,IAGtBC,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUb,EAAKe,EAALf,MAClBN,EAAAsB,OAAOK,QAAQ,qBAAoCH,OAAfL,EAAS,QAAYK,OAANlB,EAAM,MAAK,CAC5DA,MAAO,IACPmB,kBAAmB,Y,IAnC3BvB,EAASC,KAAKyB,iBAAiB,UAAU,SAAAC,GACvCA,EAAIC,iBAMJ,IAJA,IAAIC,EAAWC,OAAO9B,EAASI,MAAM2B,OAC/BC,EAAUF,OAAO9B,EAASK,KAAK0B,OAC/BE,EAAYH,OAAO9B,EAASM,OAAOyB,OAEhCG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnC3B,EAAc2B,EAAGL,GACjBA,GAAsBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elements = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nelements.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  let delayVal = Number(elements.delay.value);\n  const stepVal = Number(elements.step.value);\n  const amountVal = Number(elements.amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, delayVal);\n    delayVal = delayVal + stepVal;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(` Fulfilled promise ${position} in ${delay}ms`, {\n        delay: 6000,\n        cssAnimationStyle: 'from-top',\n      });\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(` Rejected promise ${position} in ${delay}ms`, {\n        delay: 6000,\n        cssAnimationStyle: 'from-top',\n      });\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$elements","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","Notify","success","concat","cssAnimationStyle","catch","failure","addEventListener","evt","preventDefault","delayVal","Number","value","stepVal","amountVal","i"],"version":3,"file":"03-promises.c09228ad.js.map"}