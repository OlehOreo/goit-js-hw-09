{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAW,CACfC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAgBjC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUJ,MAAAK,IAEpBM,EAAO,CAAEE,SAAAT,EAAUJ,MAAAK,GAAQ,GAE5BA,EAAM,IAIRS,MAAK,EAACD,SAAEA,EAAQb,MAAEA,MACjBN,EAAAqB,OAAOC,QAAQ,sBAAsBH,QAAeb,MAAW,CAC7DA,MAAO,IACPiB,kBAAmB,YACnB,IAEHC,OAAM,EAACL,SAAEA,EAAQb,MAAEA,MAClBN,EAAAqB,OAAOI,QAAQ,qBAAqBN,QAAeb,MAAW,CAC5DA,MAAO,IACPiB,kBAAmB,YACnB,G,CApCRrB,EAASC,KAAKuB,iBAAiB,UAAUC,IACvCA,EAAIC,iBAEJ,IAAIC,EAAWC,OAAO5B,EAASI,MAAMyB,OACrC,MAAMC,EAAUF,OAAO5B,EAASK,KAAKwB,OAC/BE,EAAYH,OAAO5B,EAASM,OAAOuB,OAEzC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnCzB,EAAcyB,EAAGL,GACjBA,GAAsBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elements = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nelements.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  let delayVal = Number(elements.delay.value);\n  const stepVal = Number(elements.step.value);\n  const amountVal = Number(elements.amount.value);\n\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, delayVal);\n    delayVal = delayVal + stepVal;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(` Fulfilled promise ${position} in ${delay}ms`, {\n        delay: 6000,\n        cssAnimationStyle: 'from-top',\n      });\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(` Rejected promise ${position} in ${delay}ms`, {\n        delay: 6000,\n        cssAnimationStyle: 'from-top',\n      });\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$elements","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","Notify","success","cssAnimationStyle","catch","failure","addEventListener","evt","preventDefault","delayVal","Number","value","stepVal","amountVal","i"],"version":3,"file":"03-promises.17f861d9.js.map"}